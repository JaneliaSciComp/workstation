package org.janelia.it.workstation.gui.dataview;

import java.awt.BorderLayout;
import java.util.Properties;
import org.janelia.it.workstation.gui.util.WindowLocator;

import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import org.openide.util.lookup.Lookups;


/**
 * Top component for the entity-based data viewer. 
 * 
 * @author <a href="mailto:rokickik@janelia.hhmi.org">Konrad Rokicki</a>
 */
@ConvertAsProperties(
        dtd = "-//org.janelia.it.workstation.gui.dataview//DataViewer//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = DataViewerTopComponent.PREFERRED_ID,
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_NEVER
)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@Messages({
    "CTL_DataViewerAction=Data Viewer",
    "CTL_DataViewerTopComponent=Data Viewer",
    "HINT_DataViewerTopComponent=This is a Data Viewer window"
})
public final class DataViewerTopComponent extends TopComponent {

    public static final String PREFERRED_ID = "DataViewerTopComponent";
    
    private final DataViewer dataViewer;
    
    public DataViewerTopComponent() {
        initComponents();
        setName(Bundle.CTL_DataViewerTopComponent());
        setToolTipText(Bundle.HINT_DataViewerTopComponent());
        establishEntityAcceptor();
        dataViewer = new DataViewer();
    }

    //------------------------------------------HELPERS
    private void establishEntityAcceptor() {
        Launcher launcher = new Launcher();
        this.associateLookup( Lookups.singleton( launcher ) );
    }
        
    public void openDataViewer(Long entityId) {
        dataViewer.getEntityPane().performSearchById(entityId);
    }
    
    public DataViewer getDataViewer() {
        return dataViewer;
    }
    
    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contentPanel = new javax.swing.JPanel();

        contentPanel.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel contentPanel;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        contentPanel.add(dataViewer, BorderLayout.CENTER);
        TopComponent tc = WindowLocator.getByName(DataModelingTopComponent.PREFERRED_ID);
         if (tc!=null) {
             tc.open();
             tc.requestActive();
         }
        
    }

    @Override
    public void componentClosed() {
         contentPanel.remove(dataViewer);
         TopComponent tc = WindowLocator.getByName(DataModelingTopComponent.PREFERRED_ID);
         if (tc!=null) {
             tc.close();
         }
    }

    void writeProperties(Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
