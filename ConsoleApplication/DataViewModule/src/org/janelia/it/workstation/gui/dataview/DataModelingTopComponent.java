package org.janelia.it.workstation.gui.dataview;

import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component for showing the data modeling (entity type/attribute) tree. 
 * 
 * @author <a href="mailto:rokickik@janelia.hhmi.org">Konrad Rokicki</a>
 */
@ConvertAsProperties(
        dtd = "-//org.janelia.it.workstation.gui.dataview//DataModeling//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = DataModelingTopComponent.PREFERRED_ID,
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "properties", openAtStartup = false, position=600)
@Messages({
    "CTL_DataModelingAction=Data Modeling",
    "CTL_DataModelingTopComponent=Data Modeling",
    "HINT_DataModelingTopComponent=This is a Data Modeling panel"
})
public final class DataModelingTopComponent extends TopComponent {

    public static final String PREFERRED_ID = "DataModelingTopComponent";
    
    private final EntityTypePane entityTypePane;
    
    public DataModelingTopComponent() {
        initComponents();
        setName(Bundle.CTL_DataModelingTopComponent());
        setToolTipText(Bundle.HINT_DataModelingTopComponent());
        this.entityTypePane = new EntityTypePane();
    }

    public EntityTypePane getEntityTypePane() {
        return entityTypePane;
    }
    
    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contentPanel = new javax.swing.JPanel();

        contentPanel.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel contentPanel;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        contentPanel.add(entityTypePane);
        entityTypePane.refresh();
    }

    @Override
    public void componentClosed() {
        contentPanel.remove(entityTypePane);
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
