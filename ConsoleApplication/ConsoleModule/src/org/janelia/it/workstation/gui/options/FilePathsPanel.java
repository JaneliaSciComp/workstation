package org.janelia.it.workstation.gui.options;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileNotFoundException;

import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JPanel;
import javax.swing.JTextField;

import org.janelia.it.workstation.gui.util.GroupedKeyValuePanel;
import org.janelia.it.workstation.shared.util.SystemInfo;
import org.janelia.it.workstation.shared.util.Utils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

final class FilePathsPanel extends javax.swing.JPanel {

    private static final Logger log = LoggerFactory.getLogger(FilePathsPanel.class);

    private final FilePathsOptionsPanelController controller;

    private final GroupedKeyValuePanel mainPanel;

    private JTextField downloadsDirField;

    FilePathsPanel(FilePathsOptionsPanelController controller) {
        this.controller = controller;
        initComponents();

        this.mainPanel = new GroupedKeyValuePanel();
        add(mainPanel, BorderLayout.CENTER);
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.BorderLayout());
    }// </editor-fold>//GEN-END:initComponents

    void load() {

        log.info("Loading file path settings...");

        mainPanel.removeAll();

        downloadsDirField = new JTextField(40);
        downloadsDirField.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent e) {
                controller.changed();
            }
        });
        
        String downloadsDir = SystemInfo.getDownloadsDir().getAbsolutePath();
        downloadsDirField.setText(downloadsDir);

        String chooseFileText = null;
        ImageIcon chooseFileIcon = null;
        try {
            chooseFileIcon = Utils.getClasspathImage("magnifier.png");
        } catch (FileNotFoundException e) {
            log.warn("Failed to load button icon", e);
            chooseFileText = "...";
        }

        JButton chooseFileButton = new JButton(chooseFileText, chooseFileIcon);
        chooseFileButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                File currentDir = new File(downloadsDirField.getText());
                if (! currentDir.exists()) {
                    currentDir = null;
                }
                JFileChooser fileChooser = new JFileChooser();
                fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
                fileChooser.setCurrentDirectory(currentDir);
                int returnVal = fileChooser.showOpenDialog(FilePathsPanel.this);
                if (returnVal == JFileChooser.APPROVE_OPTION) {
                    downloadsDirField.setText(fileChooser.getSelectedFile().getAbsolutePath());
                    controller.changed();
                }
            }
        });

        JPanel downloadDirPanel = new JPanel();
        downloadDirPanel.setLayout(new BoxLayout(downloadDirPanel, BoxLayout.X_AXIS));
        downloadDirPanel.add(downloadsDirField);
        downloadDirPanel.add(chooseFileButton);

        mainPanel.addItem("Downloads Dir", downloadDirPanel);

    }

    void store() {

        String downloadsDir = downloadsDirField.getText().trim();
        if (!downloadsDir.equals(SystemInfo.getDownloadsDir().getAbsolutePath())) {
            log.info("Saving downloads dir: "+downloadsDir);
            SystemInfo.setDownloadsDir(downloadsDir);
        }
    }

    boolean valid() {
        // TODO check whether form is consistent and complete
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
